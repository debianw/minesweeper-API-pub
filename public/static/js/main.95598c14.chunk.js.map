{"version":3,"sources":["bomb.png","Col.js","Cell.js","Grid.js","Form.js","redux/constants.js","redux/actions/game.js","Game.js","redux/reducers/game.js","redux/reducers/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["module","exports","__webpack_require__","p","Col","_ref","children","react_default","a","createElement","className","Cell","onClick","data","_ref$forceReveal","forceReveal","hasBomb","reveal","src","bomb","alt","width","height","value","Grid","onCellClicked","cell","_this$props","_this","props","onRevealCell","gameId","_this2","this","_this$props2","revealAll","map","rows","y","key","Component","Form","state","colsSize","rowsSize","totalBombs","onColsSizeChange","setState","onRowsSizeChange","onTotalBombsSizeChange","onCreateNewGame","onCreateGame","type","onChange","e","target","GAME_LOADING","GAME_CREATED","GAME_REVEAL_CELL","GAME_OVER","GAME_UPDATING","api","Game","createGame","game","revealCell","gameOver","src_Form","loading","react","updating","src_Grid","_id","grid","connect","options","arguments","length","undefined","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","constants","payload","request","post","concat","sent","t0","console","log","stop","_x","apply","_ref2","_callee2","_context2","objectSpread","abrupt","_x2","initialState","combineReducers","action","newGrid","toConsumableArray","coords","x","Boolean","window","location","hostname","match","store","logger","createLogger","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_Game_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95598c14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.b4f7aa9c.png\";","//\nimport React from 'react';\n\n//\nexport default ({ children }) => (\n  <div className=\"grid-col\">\n    {children}\n  </div>\n);","//\nimport React from 'react';\nimport bomb from './bomb.png';\n\n//\nexport default ({ children, onClick, data, forceReveal = false }) => (\n  <div className=\"grid-cell\" onClick={() => onClick(data)}>\n    { data.hasBomb\n      ? <span>{forceReveal || data.reveal ? <img src={bomb} alt=\"bomb!\" width={40} height={40} /> : ''}</span>\n      : <span>{forceReveal || data.reveal ? data.value : ''}</span> }\n  </div>\n);","//\nimport React, { Component } from 'react';\nimport Col from './Col';\nimport Cell from './Cell';\n\n//\nclass Grid extends Component {\n  onCellClicked = (cell) => {\n    if (cell.reveal) return;\n    const { onRevealCell, gameId } = this.props;\n    onRevealCell(gameId, cell);\n  };\n\n  render() {\n    const { data, revealAll } = this.props;\n\n    return (<div className=\"grid\">\n      {data.map(( rows, y ) => {\n        return (\n          <Col key={y}>\n            {rows.map(( cell, y ) => {\n              return <Cell onClick={this.onCellClicked} key={y} data={cell} forceReveal={revealAll} />\n            })} \n          </Col>\n        );\n      })}\n    </div>)\n  }\n}\n\n//\nexport default Grid;","//\nimport React, { Component } from 'react';\n\n//\nclass Form extends Component {\n\n  state = {\n    colsSize: 0,\n    rowsSize: 0,\n    totalBombs: 0,\n  };\n\n  componentDidMount() {\n    const { colsSize, rowsSize, totalBombs } = this.props;\n    this.setState({ colsSize, rowsSize, totalBombs });\n  }\n\n  onColsSizeChange = (colsSize) => {\n    this.setState({ colsSize });\n  }\n\n  onRowsSizeChange = (rowsSize) => {\n    this.setState({ rowsSize });\n  };\n\n  onTotalBombsSizeChange = (totalBombs) => {\n    this.setState({ totalBombs });\n  }\n\n  onCreateNewGame = () => {\n    const { onCreateGame } = this.props;\n\n    onCreateGame({\n      colsSize: this.state.colsSize,\n      rowsSize: this.state.rowsSize,\n      totalBombs: this.state.totalBombs, \n    });\n  }\n\n  render() {\n    return (<div className=\"form\">\n      <label className=\"form-label\">Columns: <input className=\"numeric-input\" type=\"text\" value={this.state.colsSize} onChange={e => this.onColsSizeChange(e.target.value)} /></label>\n      <label className=\"form-label\">Rows: <input className=\"numeric-input\" type=\"text\" value={this.state.rowsSize} onChange={e => this.onRowsSizeChange(e.target.value)} /></label>\n      <label className=\"form-label\">Total Bombs: <input className=\"numeric-input\" type=\"text\" value={this.state.totalBombs} onChange={e => this.onTotalBombsSizeChange(e.target.value)} /></label>\n\n      <button onClick={this.onCreateNewGame}> Create New Game </button>\n    </div>);\n  }\n}\n\n//\nexport default Form;","//\nexport const GAME_LOADING = 'GAME_LOADING';\nexport const GAME_CREATED = 'GAME_CREATED';\nexport const GAME_REVEAL_CELL = 'GAME_REVEAL_CELL';\nexport const GAME_OVER = 'GAME_OVER';\nexport const GAME_UPDATING = 'GAME_UPDATING';","//\nimport * as constants from '../constants' ;\nimport request from 'axios';\n\nconst api = '/api/minesweeper';\n\n//\nconst createGame = (options = {}) => async (dispatch) => {\n  try {\n    dispatch({ type: constants.GAME_LOADING, payload: true });\n\n    const response = await request\n      .post(`${api}`, {\n        colsSize: options.colsSize,\n        rowsSize: options.rowsSize,\n        totalBombs: options.totalBombs,\n      });\n\n    dispatch({\n      type: constants.GAME_CREATED,\n      payload: response.data \n    });\n\n    dispatch({ type: constants.GAME_LOADING, payload: false });\n  } catch(err) {\n    console.log(err);\n  }\n}\n\n//\nconst revealCell = (gameId, cell = {}) => async (dispatch) => {\n  try {\n    dispatch({ type: constants.GAME_UPDATING, payload: true });\n\n    const response = await request\n      .post(`${api}/${gameId}/reveal-cell`, {\n        ...cell,\n      });\n    const { data } = response;\n\n    if (data.gameOver) {\n      dispatch({ type: constants.GAME_OVER }); \n      dispatch({ type: constants.GAME_UPDATING, payload: false });\n      return;\n    }\n\n    dispatch({ type: constants.GAME_UPDATING, payload: false });\n    dispatch({ type: constants.GAME_REVEAL_CELL, payload: response.data });\n  } catch(err) {\n    console.log(err);\n  }\n};\n\n//\nexport {\n  createGame,\n  revealCell,\n};","//\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from './Grid';\nimport Form from './Form';\nimport * as gameActions from './redux/actions/game';\nimport './Game.css';\n\n//\nclass Game extends Component {\n\n  componentDidMount() {\n    const { createGame } = this.props;\n    createGame({\n      colsSize: 5,\n      rowsSize: 5,\n      totalBombs: 15\n    });\n  }\n\n  render() {\n    const { game, revealCell } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1> MineSweeper </h1>\n        {game.gameOver && <h3 className=\"game-over-message\"> GAME OVER </h3>}\n\n        <Form colsSize={game.colsSize} rowsSize={game.rowsSize} totalBombs={game.totalBombs} onCreateGame={this.props.createGame} />\n\n        <div className=\"game-wrapper\">\n          {game.loading && (<div>Loading ...</div>)}\n          {!game.loading && (\n            <Fragment>\n              {game.updating && <div className=\"mask\">Revealing cell ...</div>}\n              {game.gameOver && <div className=\"mask\"></div>}\n              <Grid gameId={game._id} data={game.grid} revealAll={game.revealAll} onRevealCell={revealCell} />\n            </Fragment>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    game: state.game,\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    createGame: gameActions.createGame,\n    revealCell: gameActions.revealCell,\n  }\n)(Game);\n","//\nimport * as constants from '../constants';\n\n//\nconst initialState = {\n  gameOver: false,\n  loading: false,\n  updating: false,\n  grid: [],\n  revealAll: false,\n  colsSize: 5,\n  rowsSize: 5,\n  totalBombs: 10,\n};\n\n//\nexport default function game(state = initialState, action) {\n  switch (action.type) {\n    case constants.GAME_CREATED:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    \n    case constants.GAME_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      }\n\n    case constants.GAME_UPDATING:\n      return {\n        ...state,\n        updating: action.payload,\n      }\n\n    case constants.GAME_REVEAL_CELL:\n      const cell = action.payload;\n      const newGrid = [...state.grid];\n      newGrid[cell.coords.x][cell.coords.y] = { ...cell, reveal: true };\n\n      return {\n        ...state,\n        grid: newGrid, \n      }\n\n    case constants.GAME_OVER:\n      return {\n        ...state,\n        revealAll: true,\n        gameOver: true,\n      }\n  \n    default:\n      return state;\n  }\n}","//\nimport { combineReducers } from 'redux';\nimport game from './game';\n\n//\nexport default combineReducers({\n  game,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport Game from './Game';\nimport createStore from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}> \n    <Game />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\n//\nexport default () => {\n  const logger = createLogger({});\n\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(thunk, logger),\n  );\n\n  return store;\n}\n"],"sourceRoot":""}